---
interface IngredienteProps {
  bebida: {
    slug: string;
    data: {
      nombre: string;
      inventor: string;
      fechaCreacion: string;
      descripcionCorta: string;
      imagen: string;
      precio: number;
      ingredientesPrincipales: string[];
    }
  }
}

const { bebida } = Astro.props as IngredienteProps;
---

<div class="bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:scale-105">
  <a href={`/bebidas/${bebida.slug}`}>
    <img 
      src={bebida.data.imagen} 
      alt={bebida.data.nombre} 
      class="w-full h-48 object-cover"
    />
    <div class="p-4">
      <h3 class="text-xl font-bold text-gray-900">{bebida.data.nombre}</h3>
      <p class="text-sm text-gray-500">Creado por: {bebida.data.inventor}</p>
      <p class="text-sm text-gray-500">Origen: {bebida.data.fechaCreacion}</p>
      <p class="mt-2 text-gray-700">{bebida.data.descripcionCorta}</p>
      
      <div class="mt-3">
        <h4 class="text-sm font-semibold text-gray-900">Ingredientes principales:</h4>
        <ul class="flex flex-wrap gap-1 mt-1">
          {bebida.data.ingredientesPrincipales.map(ingrediente => (
            <li class="text-xs bg-indigo-100 text-indigo-800 px-2 py-1 rounded">
              {ingrediente}
            </li>
          ))}
        </ul>
      </div>
      
      <div class="mt-4 flex justify-between items-center">
        <span class="text-xl font-bold text-indigo-700">${bebida.data.precio.toFixed(2)}</span>
        <span class="bg-indigo-600 text-white px-3 py-1 rounded text-sm">Ver Detalles</span>
      </div>
    </div>
  </a>
</div>